----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    17:23:51 04/10/2020 
-- Design Name: 
-- Module Name:    main - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity main is
	Generic(
			segundo : Natural:=12000000
			);
    Port ( clk : in  STD_LOGIC;
           rst : in  STD_LOGIC;
           led : out  STD_LOGIC_VECTOR (2 downto 0)
			  );
end main;

architecture Behavioral of main is
type FSM is (Verde, Amarillo, Rojo);
signal Estado : FSM;
signal cnt : Natural;

begin


  process(clk, rst)
  begin
  
    if(rst='0')then
	 
		cnt<=0;
		Estado<=Verde;
		
	 elsif(rising_edge(clk))then


		case Estado is
		when Verde =>
			led<="001";
		  if(cnt=3*segundo)then
		    cnt<=0;
			 Estado<=Amarillo;
		  else
		    cnt<=cnt+1;
		  end if;
		
		when Amarillo =>
			led<="010";
		  if(cnt=segundo)then
		    cnt<=0;
			 Estado<=Rojo;
		  else
		    cnt<=cnt+1;
		  end if;
		  
		when Rojo =>
		led<="100";
		  if(cnt=2*segundo)then
		    cnt<=0;
			 Estado<=Verde;
		  else
		    cnt<=cnt+1;
		  end if;
		
		when others =>
		  cnt<=0;
		  Estado<=Verde;
		end case;
	 
	 end if;
  
  end process;

end Behavioral;
